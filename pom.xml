<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.2.5</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>kz.mukha</groupId>
	<artifactId>wallet</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>wallet</name>
	<description>Finance calculator for Kazakhstan</description>
	<properties>
		<postgres.password>[ENTER LOCAL PASSWORD HERE]</postgres.password>
		<java.version>17</java.version>
		<kotlin.version>1.9.23</kotlin.version>
		<kotlinx.version>1.6.3</kotlinx.version>
		<jackson.version>2.17.1</jackson.version>
		<jooq.version>3.19.8</jooq.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-kotlin</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jetbrains.kotlin</groupId>
			<artifactId>kotlin-reflect</artifactId>
			<version>${kotlin.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jetbrains.kotlin</groupId>
			<artifactId>kotlin-stdlib</artifactId>
			<version>${kotlin.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jetbrains.kotlinx</groupId>
			<artifactId>kotlinx-serialization-json</artifactId>
			<version>1.6.3</version>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jooq</groupId>
			<artifactId>jooq</artifactId>
			<version>${jooq.version}</version>
		</dependency>

		<dependency>
			<groupId>org.jooq</groupId>
			<artifactId>jooq-codegen-maven</artifactId>
			<version>${jooq.version}</version>
		</dependency>

		<dependency>
			<groupId>org.jooq</groupId>
			<artifactId>jooq-meta</artifactId>
			<version>${jooq.version}</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.restdocs</groupId>
			<artifactId>spring-restdocs-mockmvc</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>
		<testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>
		<plugins>
			<plugin>
				<groupId>org.asciidoctor</groupId>
				<artifactId>asciidoctor-maven-plugin</artifactId>
				<version>2.2.1</version>
				<executions>
					<execution>
						<id>generate-docs</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>process-asciidoc</goal>
						</goals>
						<configuration>
							<backend>html</backend>
							<doctype>book</doctype>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.springframework.restdocs</groupId>
						<artifactId>spring-restdocs-asciidoctor</artifactId>
						<version>${spring-restdocs.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jetbrains.kotlin</groupId>
				<artifactId>kotlin-maven-plugin</artifactId>
				<configuration>
					<args>
						<arg>-Xjsr305=strict</arg>
					</args>
					<compilerPlugins>
						<plugin>spring</plugin>
						<plugin>jpa</plugin>
						<plugin>kotlinx-serialization</plugin>
					</compilerPlugins>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.jetbrains.kotlin</groupId>
						<artifactId>kotlin-maven-allopen</artifactId>
						<version>${kotlin.version}</version>
					</dependency>
					<dependency>
						<groupId>org.jetbrains.kotlin</groupId>
						<artifactId>kotlin-maven-noarg</artifactId>
						<version>${kotlin.version}</version>
					</dependency>
					<dependency>
						<groupId>org.jetbrains.kotlin</groupId>
						<artifactId>kotlin-maven-serialization</artifactId>
						<version>${kotlin.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<!-- Specify the maven code generator plugin -->
				<!-- Use org.jooq                for the Open Source Edition

                     Note: Only the Open Source Edition is hosted on Maven Central.
                           Install the others locally using the provided scripts, or access them from here: https://repo.jooq.org -->
				<groupId>org.jooq</groupId>
				<artifactId>jooq-codegen-maven</artifactId>
				<version>${jooq.version}</version>

				<executions>
					<execution>
						<id>jooq-codegen</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<jdbc>
						<driver>org.postgresql.Driver</driver>
						<url>jdbc:postgresql://aws-0-ap-south-1.pooler.supabase.com:5432/wallet</url>
						<user>postgres.hvbnbrdwefiviufguppq</user>
						<password>${postgres.password}</password>
					</jdbc>
					<generator>
						<!-- See https://www.jooq.org/doc/3.8/manual/code-generation/codegen-configuration/ and https://www.jooq.org/doc/3.8/manual/code-generation/codegen-advanced/ -->
						<!-- Or even better, https://www.jooq.org/doc/3.14/manual/code-generation/codegen-advanced/ -->
						<database>
							<includeTables>true</includeTables>
							<includeInvisibleColumns>false</includeInvisibleColumns>
							<includeEmbeddables>false</includeEmbeddables>
							<includeRoutines>false</includeRoutines>
							<includePackages>false</includePackages>
							<includePackageRoutines>false</includePackageRoutines>
							<includePackageUDTs>false</includePackageUDTs>
							<includePackageConstants>false</includePackageConstants>
							<includeUDTs>false</includeUDTs>
							<!--<includeDomains>false</includeDomains>-->
							<includeSequences>true</includeSequences>
							<includeSystemSequences>true</includeSystemSequences>
							<includePrimaryKeys>true</includePrimaryKeys>
							<includeUniqueKeys>true</includeUniqueKeys>
							<includeForeignKeys>true</includeForeignKeys>
							<includeCheckConstraints>false</includeCheckConstraints>
							<includeSystemCheckConstraints>false</includeSystemCheckConstraints>
							<includeIndexes>false</includeIndexes> <!-- Yields NPE on active_nodes -->
							<includeSystemIndexes>false</includeSystemIndexes>
							<!-- Asterisk is to capture id sequences as well -->
							<!-- ((?!_p\d+)(?!_old).)* to exclude _p99 partition and _old postfixes -->
							<includes>.*</includes>
							<inputSchema>wallet</inputSchema>
						</database>
						<target>
							<packageName>kz.mukha.wallet.data.jooq.postgres</packageName>
							<directory>src/main/kotlin</directory>
						</target>
						<generate>
							<javaTimeTypes>true</javaTimeTypes>
						</generate>
					</generator>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
