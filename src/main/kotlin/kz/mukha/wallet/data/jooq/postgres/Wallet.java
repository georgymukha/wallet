/*
 * This file is generated by jOOQ.
 */
package kz.mukha.wallet.data.jooq.postgres;


import java.util.Arrays;
import java.util.List;

import kz.mukha.wallet.data.jooq.postgres.tables.TransactionItems;
import kz.mukha.wallet.data.jooq.postgres.tables.Transactions;
import kz.mukha.wallet.data.jooq.postgres.tables.UserWalletPermissions;
import kz.mukha.wallet.data.jooq.postgres.tables.Users;
import kz.mukha.wallet.data.jooq.postgres.tables.Wallets;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Wallet extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>wallet</code>
     */
    public static final Wallet WALLET = new Wallet();

    /**
     * The table <code>wallet.transaction_items</code>.
     */
    public final TransactionItems TRANSACTION_ITEMS = TransactionItems.TRANSACTION_ITEMS;

    /**
     * The table <code>wallet.transactions</code>.
     */
    public final Transactions TRANSACTIONS = Transactions.TRANSACTIONS;

    /**
     * The table <code>wallet.user_wallet_permissions</code>.
     */
    public final UserWalletPermissions USER_WALLET_PERMISSIONS = UserWalletPermissions.USER_WALLET_PERMISSIONS;

    /**
     * The table <code>wallet.users</code>.
     */
    public final Users USERS = Users.USERS;

    /**
     * The table <code>wallet.wallets</code>.
     */
    public final Wallets WALLETS = Wallets.WALLETS;

    /**
     * No further instances allowed
     */
    private Wallet() {
        super("wallet", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            TransactionItems.TRANSACTION_ITEMS,
            Transactions.TRANSACTIONS,
            UserWalletPermissions.USER_WALLET_PERMISSIONS,
            Users.USERS,
            Wallets.WALLETS
        );
    }
}
