/*
 * This file is generated by jOOQ.
 */
package kz.mukha.wallet.data.jooq.postgres.tables.records;


import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.UUID;

import kz.mukha.wallet.data.jooq.postgres.tables.Transactions;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class TransactionsRecord extends UpdatableRecordImpl<TransactionsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>wallet.transactions.transaction_id</code>.
     */
    public void setTransactionId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>wallet.transactions.transaction_id</code>.
     */
    public UUID getTransactionId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>wallet.transactions.wallet_id</code>.
     */
    public void setWalletId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>wallet.transactions.wallet_id</code>.
     */
    public UUID getWalletId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>wallet.transactions.amount</code>.
     */
    public void setAmount(BigDecimal value) {
        set(2, value);
    }

    /**
     * Getter for <code>wallet.transactions.amount</code>.
     */
    public BigDecimal getAmount() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>wallet.transactions.operation_type</code>.
     */
    public void setOperationType(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>wallet.transactions.operation_type</code>.
     */
    public String getOperationType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>wallet.transactions.description</code>.
     */
    public void setDescription(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>wallet.transactions.description</code>.
     */
    public String getDescription() {
        return (String) get(4);
    }

    /**
     * Setter for <code>wallet.transactions.transaction_date</code>.
     */
    public void setTransactionDate(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>wallet.transactions.transaction_date</code>.
     */
    public LocalDateTime getTransactionDate() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>wallet.transactions.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>wallet.transactions.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>wallet.transactions.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>wallet.transactions.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>wallet.transactions.org_title</code>.
     */
    public void setOrgTitle(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>wallet.transactions.org_title</code>.
     */
    public String getOrgTitle() {
        return (String) get(8);
    }

    /**
     * Setter for <code>wallet.transactions.retail_place_address</code>.
     */
    public void setRetailPlaceAddress(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>wallet.transactions.retail_place_address</code>.
     */
    public String getRetailPlaceAddress() {
        return (String) get(9);
    }

    /**
     * Setter for <code>wallet.transactions.found_date</code>.
     */
    public void setFoundDate(LocalDateTime value) {
        set(10, value);
    }

    /**
     * Getter for <code>wallet.transactions.found_date</code>.
     */
    public LocalDateTime getFoundDate() {
        return (LocalDateTime) get(10);
    }

    /**
     * Setter for <code>wallet.transactions.kkm_fns_id</code>.
     */
    public void setKkmFnsId(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>wallet.transactions.kkm_fns_id</code>.
     */
    public String getKkmFnsId() {
        return (String) get(11);
    }

    /**
     * Setter for <code>wallet.transactions.fiscal_id</code>.
     */
    public void setFiscalId(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>wallet.transactions.fiscal_id</code>.
     */
    public String getFiscalId() {
        return (String) get(12);
    }

    /**
     * Setter for <code>wallet.transactions.total_sum</code>.
     */
    public void setTotalSum(BigDecimal value) {
        set(13, value);
    }

    /**
     * Getter for <code>wallet.transactions.total_sum</code>.
     */
    public BigDecimal getTotalSum() {
        return (BigDecimal) get(13);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TransactionsRecord
     */
    public TransactionsRecord() {
        super(Transactions.TRANSACTIONS);
    }

    /**
     * Create a detached, initialised TransactionsRecord
     */
    public TransactionsRecord(UUID transactionId, UUID walletId, BigDecimal amount, String operationType, String description, LocalDateTime transactionDate, LocalDateTime createdAt, LocalDateTime updatedAt, String orgTitle, String retailPlaceAddress, LocalDateTime foundDate, String kkmFnsId, String fiscalId, BigDecimal totalSum) {
        super(Transactions.TRANSACTIONS);

        setTransactionId(transactionId);
        setWalletId(walletId);
        setAmount(amount);
        setOperationType(operationType);
        setDescription(description);
        setTransactionDate(transactionDate);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        setOrgTitle(orgTitle);
        setRetailPlaceAddress(retailPlaceAddress);
        setFoundDate(foundDate);
        setKkmFnsId(kkmFnsId);
        setFiscalId(fiscalId);
        setTotalSum(totalSum);
        resetChangedOnNotNull();
    }
}
